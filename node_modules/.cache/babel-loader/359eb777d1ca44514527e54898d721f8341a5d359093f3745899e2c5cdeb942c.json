{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbenissan/Desktop/Donation Form/src/Form/FormContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Slide1 from './slides/Slide1';\nimport Slide2 from './slides/Slide2';\nimport Slide3 from './slides/Slide3';\nimport Slide4 from './slides/Slide4';\nimport Slide5 from './slides/Slide5';\nimport bg from './assets/bg.png'; // Import the background image\nimport './Form.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContainer = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [name, setName] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [selectedAmount, setSelectedAmount] = useState(null); // Track the selected amount\n  const [animation, setAnimation] = useState('fadeInUp');\n  const [nameTyped, setNameTyped] = useState(false); // Added the missing state\n  const totalActions = 9; // Total number of actions for full progress\n\n  const incrementProgress = amount => {\n    setProgress(prev => Math.min(prev + amount, 100)); // Ensure progress does not exceed 100\n  };\n  const decrementProgress = amount => {\n    setProgress(prev => Math.max(prev - amount, 0)); // Ensure progress does not go below 0\n  };\n  const nextSlide = () => {\n    setAnimation('fadeOutUp');\n    setTimeout(() => {\n      setCurrentSlide(currentSlide + 1);\n      setAnimation('fadeInUp');\n      incrementProgress(100 / totalActions); // Increment progress for moving to the next page\n    }, 500); // Match the duration of the animation\n  };\n  const prevSlide = () => {\n    setAnimation('fadeOutUp');\n    setTimeout(() => {\n      setCurrentSlide(currentSlide - 1);\n      setAnimation('fadeInUp');\n    }, 500); // Match the duration of the animation\n  };\n  const handleNameChange = name => {\n    setName(name);\n    if (name.length > 0 && !nameTyped) {\n      incrementProgress(100 / totalActions); // Increment progress for typing in an input\n      setNameTyped(true);\n    } else if (name.length === 0 && nameTyped) {\n      decrementProgress(100 / totalActions); // Decrement progress if input is cleared\n      setNameTyped(false);\n    }\n  };\n  const handleAmountSelect = amount => {\n    setSelectedAmount(amount);\n    incrementProgress(100 / totalActions); // Increment progress for selecting an amount\n  };\n  const slides = [/*#__PURE__*/_jsxDEV(Slide1, {\n    nextSlide: nextSlide\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Slide2, {\n    nextSlide: nextSlide,\n    onNameChange: handleNameChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Slide3, {\n    nextSlide: nextSlide,\n    incrementProgress: incrementProgress,\n    decrementProgress: decrementProgress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Slide4, {\n    nextSlide: nextSlide,\n    name: name,\n    incrementProgress: incrementProgress,\n    onAmountSelect: handleAmountSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Slide5, {\n    nextSlide: nextSlide,\n    amount: selectedAmount || 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this) // Pass the selected amount to Slide5\n  // Add additional slides to the array as needed\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      style: {\n        backgroundImage: `url(${bg})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form ${animation}`,\n        children: slides[currentSlide]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(FormContainer, \"Q6B3LouUgAmlnXUe2YoKgUXmREs=\");\n_c = FormContainer;\nexport default FormContainer;\nvar _c;\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"names":["React","useState","Slide1","Slide2","Slide3","Slide4","Slide5","bg","jsxDEV","_jsxDEV","FormContainer","_s","currentSlide","setCurrentSlide","name","setName","progress","setProgress","selectedAmount","setSelectedAmount","animation","setAnimation","nameTyped","setNameTyped","totalActions","incrementProgress","amount","prev","Math","min","decrementProgress","max","nextSlide","setTimeout","prevSlide","handleNameChange","length","handleAmountSelect","slides","fileName","_jsxFileName","lineNumber","columnNumber","onNameChange","onAmountSelect","className","children","style","backgroundImage","width","_c","$RefreshReg$"],"sources":["/Users/thomasbenissan/Desktop/Donation Form/src/Form/FormContainer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Slide1 from './slides/Slide1';\nimport Slide2 from './slides/Slide2';\nimport Slide3 from './slides/Slide3';\nimport Slide4 from './slides/Slide4';\nimport Slide5 from './slides/Slide5';\nimport bg from './assets/bg.png'; // Import the background image\nimport './Form.css'; // Import the CSS file\n\nconst FormContainer: React.FC = () => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [name, setName] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [selectedAmount, setSelectedAmount] = useState<number | null>(null); // Track the selected amount\n  const [animation, setAnimation] = useState('fadeInUp');\n  const [nameTyped, setNameTyped] = useState(false); // Added the missing state\n  const totalActions = 9; // Total number of actions for full progress\n\n  const incrementProgress = (amount: number) => {\n    setProgress(prev => Math.min(prev + amount, 100)); // Ensure progress does not exceed 100\n  };\n\n  const decrementProgress = (amount: number) => {\n    setProgress(prev => Math.max(prev - amount, 0)); // Ensure progress does not go below 0\n  };\n\n  const nextSlide = () => {\n    setAnimation('fadeOutUp');\n    setTimeout(() => {\n      setCurrentSlide(currentSlide + 1);\n      setAnimation('fadeInUp');\n      incrementProgress(100 / totalActions); // Increment progress for moving to the next page\n    }, 500); // Match the duration of the animation\n  };\n\n  const prevSlide = () => {\n    setAnimation('fadeOutUp');\n    setTimeout(() => {\n      setCurrentSlide(currentSlide - 1);\n      setAnimation('fadeInUp');\n    }, 500); // Match the duration of the animation\n  };\n\n  const handleNameChange = (name: string) => {\n    setName(name);\n    if (name.length > 0 && !nameTyped) {\n      incrementProgress(100 / totalActions); // Increment progress for typing in an input\n      setNameTyped(true);\n    } else if (name.length === 0 && nameTyped) {\n      decrementProgress(100 / totalActions); // Decrement progress if input is cleared\n      setNameTyped(false);\n    }\n  };\n\n  const handleAmountSelect = (amount: number) => {\n    setSelectedAmount(amount);\n    incrementProgress(100 / totalActions); // Increment progress for selecting an amount\n  };\n\n  const slides = [\n    <Slide1 nextSlide={nextSlide} />,\n    <Slide2 nextSlide={nextSlide} onNameChange={handleNameChange} />,\n    <Slide3 nextSlide={nextSlide} incrementProgress={incrementProgress} decrementProgress={decrementProgress} />,\n    <Slide4 nextSlide={nextSlide} name={name} incrementProgress={incrementProgress} onAmountSelect={handleAmountSelect} />,\n    <Slide5 nextSlide={nextSlide} amount={selectedAmount || 0} /> // Pass the selected amount to Slide5\n    // Add additional slides to the array as needed\n  ];\n\n  return (\n    <div className=\"overlay\">\n      <div className=\"form-container\" style={{ backgroundImage: `url(${bg})` }}>\n        <div className=\"progress-bar\">\n          <div className=\"progress\" style={{ width: `${progress}%` }}></div>\n        </div>\n        <div className={`form ${animation}`}>\n          {slides[currentSlide]}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,EAAE,MAAM,iBAAiB,CAAC,CAAC;AAClC,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;EAC3E,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAMuB,YAAY,GAAG,CAAC,CAAC,CAAC;;EAExB,MAAMC,iBAAiB,GAAIC,MAAc,IAAK;IAC5CT,WAAW,CAACU,IAAI,IAAIC,IAAI,CAACC,GAAG,CAACF,IAAI,GAAGD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAMI,iBAAiB,GAAIJ,MAAc,IAAK;IAC5CT,WAAW,CAACU,IAAI,IAAIC,IAAI,CAACG,GAAG,CAACJ,IAAI,GAAGD,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMM,SAAS,GAAGA,CAAA,KAAM;IACtBX,YAAY,CAAC,WAAW,CAAC;IACzBY,UAAU,CAAC,MAAM;MACfpB,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;MACjCS,YAAY,CAAC,UAAU,CAAC;MACxBI,iBAAiB,CAAC,GAAG,GAAGD,YAAY,CAAC,CAAC,CAAC;IACzC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC;EAED,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtBb,YAAY,CAAC,WAAW,CAAC;IACzBY,UAAU,CAAC,MAAM;MACfpB,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;MACjCS,YAAY,CAAC,UAAU,CAAC;IAC1B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC;EAED,MAAMc,gBAAgB,GAAIrB,IAAY,IAAK;IACzCC,OAAO,CAACD,IAAI,CAAC;IACb,IAAIA,IAAI,CAACsB,MAAM,GAAG,CAAC,IAAI,CAACd,SAAS,EAAE;MACjCG,iBAAiB,CAAC,GAAG,GAAGD,YAAY,CAAC,CAAC,CAAC;MACvCD,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM,IAAIT,IAAI,CAACsB,MAAM,KAAK,CAAC,IAAId,SAAS,EAAE;MACzCQ,iBAAiB,CAAC,GAAG,GAAGN,YAAY,CAAC,CAAC,CAAC;MACvCD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMc,kBAAkB,GAAIX,MAAc,IAAK;IAC7CP,iBAAiB,CAACO,MAAM,CAAC;IACzBD,iBAAiB,CAAC,GAAG,GAAGD,YAAY,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMc,MAAM,GAAG,cACb7B,OAAA,CAACP,MAAM;IAAC8B,SAAS,EAAEA;EAAU;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAChCjC,OAAA,CAACN,MAAM;IAAC6B,SAAS,EAAEA,SAAU;IAACW,YAAY,EAAER;EAAiB;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAChEjC,OAAA,CAACL,MAAM;IAAC4B,SAAS,EAAEA,SAAU;IAACP,iBAAiB,EAAEA,iBAAkB;IAACK,iBAAiB,EAAEA;EAAkB;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAC5GjC,OAAA,CAACJ,MAAM;IAAC2B,SAAS,EAAEA,SAAU;IAAClB,IAAI,EAAEA,IAAK;IAACW,iBAAiB,EAAEA,iBAAkB;IAACmB,cAAc,EAAEP;EAAmB;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACtHjC,OAAA,CAACH,MAAM;IAAC0B,SAAS,EAAEA,SAAU;IAACN,MAAM,EAAER,cAAc,IAAI;EAAE;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAC9D;EAAA,CACD;EAED,oBACEjC,OAAA;IAAKoC,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtBrC,OAAA;MAAKoC,SAAS,EAAC,gBAAgB;MAACE,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAOzC,EAAE;MAAI,CAAE;MAAAuC,QAAA,gBACvErC,OAAA;QAAKoC,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BrC,OAAA;UAAKoC,SAAS,EAAC,UAAU;UAACE,KAAK,EAAE;YAAEE,KAAK,EAAE,GAAGjC,QAAQ;UAAI;QAAE;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACNjC,OAAA;QAAKoC,SAAS,EAAE,QAAQzB,SAAS,EAAG;QAAA0B,QAAA,EACjCR,MAAM,CAAC1B,YAAY;MAAC;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAvEID,aAAuB;AAAAwC,EAAA,GAAvBxC,aAAuB;AAyE7B,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}