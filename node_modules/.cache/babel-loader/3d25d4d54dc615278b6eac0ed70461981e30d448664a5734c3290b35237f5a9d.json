{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbenissan/Desktop/Donation Form/src/Form/Slide4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport rightArrow from './rightArrow.svg'; // Import the right arrow SVG\nimport './Form.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slide4 = ({\n  nextSlide,\n  name,\n  incrementProgress\n}) => {\n  _s();\n  const [selectedAmount, setSelectedAmount] = useState(null);\n  const amounts = [25, 50, 100, 250, 500];\n  const totalActions = 9; // Ensure this matches the total actions in FormContainer\n\n  const handleAmountClick = amount => {\n    setSelectedAmount(amount);\n    incrementProgress(100 / totalActions); // Increment progress when a button is clicked\n  };\n  const handleSubmit = () => {\n    if (selectedAmount !== null) {\n      nextSlide();\n    }\n  };\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (event.key === 'Enter' && selectedAmount !== null) {\n        nextSlide();\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [selectedAmount, nextSlide]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"number\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rightArrow,\n        className: \"arrow\",\n        alt: \"Right Arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \"We're very grateful you're here to donate, \", name, \". How much are you willing to give today?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: \"in $USD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiple-choice\",\n      children: amounts.map(amount => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `amount-button ${selectedAmount === amount ? 'selected' : ''}`,\n        onClick: () => handleAmountClick(amount),\n        children: amount\n      }, amount, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ok-button\",\n      onClick: handleSubmit,\n      children: \"OK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Slide4, \"MW3ToO4r2+LB9rZ+V+IqU+qWaHw=\");\n_c = Slide4;\nexport default Slide4;\nvar _c;\n$RefreshReg$(_c, \"Slide4\");","map":{"version":3,"names":["React","useEffect","useState","rightArrow","jsxDEV","_jsxDEV","Slide4","nextSlide","name","incrementProgress","_s","selectedAmount","setSelectedAmount","amounts","totalActions","handleAmountClick","amount","handleSubmit","handleKeyPress","event","key","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","onClick","_c","$RefreshReg$"],"sources":["/Users/thomasbenissan/Desktop/Donation Form/src/Form/Slide4.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport rightArrow from './rightArrow.svg'; // Import the right arrow SVG\nimport './Form.css'; // Import the CSS file\n\nconst Slide4: React.FC<{ nextSlide: () => void, name: string, incrementProgress: (amount: number) => void }> = ({ nextSlide, name, incrementProgress }) => {\n  const [selectedAmount, setSelectedAmount] = useState<number | null>(null);\n  const amounts = [25, 50, 100, 250, 500];\n  const totalActions = 9; // Ensure this matches the total actions in FormContainer\n\n  const handleAmountClick = (amount: number) => {\n    setSelectedAmount(amount);\n    incrementProgress(100 / totalActions); // Increment progress when a button is clicked\n  };\n\n  const handleSubmit = () => {\n    if (selectedAmount !== null) {\n      nextSlide();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      if (event.key === 'Enter' && selectedAmount !== null) {\n        nextSlide();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [selectedAmount, nextSlide]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"question\">\n        <span className=\"number\">3</span>\n        <img src={rightArrow} className=\"arrow\" alt=\"Right Arrow\" />\n        We're very grateful you're here to donate, {name}. How much are you willing to give today?\n      </div>\n      <div className=\"description\">in $USD</div>\n      <div className=\"multiple-choice\">\n        {amounts.map(amount => (\n          <button\n            key={amount}\n            className={`amount-button ${selectedAmount === amount ? 'selected' : ''}`}\n            onClick={() => handleAmountClick(amount)}\n          >\n            {amount}\n          </button>\n        ))}\n      </div>\n      <button className=\"ok-button\" onClick={handleSubmit}>OK</button>\n    </div>\n  );\n};\n\nexport default Slide4;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,kBAAkB,CAAC,CAAC;AAC3C,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,MAAsG,GAAGA,CAAC;EAAEC,SAAS;EAAEC,IAAI;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACzJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAMW,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvC,MAAMC,YAAY,GAAG,CAAC,CAAC,CAAC;;EAExB,MAAMC,iBAAiB,GAAIC,MAAc,IAAK;IAC5CJ,iBAAiB,CAACI,MAAM,CAAC;IACzBP,iBAAiB,CAAC,GAAG,GAAGK,YAAY,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIN,cAAc,KAAK,IAAI,EAAE;MAC3BJ,SAAS,CAAC,CAAC;IACb;EACF,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAIC,KAAoB,IAAK;MAC/C,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,IAAIT,cAAc,KAAK,IAAI,EAAE;QACpDJ,SAAS,CAAC,CAAC;MACb;IACF,CAAC;IAEDc,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,cAAc,CAAC;IAClD,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,cAAc,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAACP,cAAc,EAAEJ,SAAS,CAAC,CAAC;EAE/B,oBACEF,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBpB,OAAA;MAAKmB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBpB,OAAA;QAAMmB,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjCxB,OAAA;QAAKyB,GAAG,EAAE3B,UAAW;QAACqB,SAAS,EAAC,OAAO;QAACO,GAAG,EAAC;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,+CACjB,EAACrB,IAAI,EAAC,2CACnD;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CxB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BZ,OAAO,CAACmB,GAAG,CAAChB,MAAM,iBACjBX,OAAA;QAEEmB,SAAS,EAAE,iBAAiBb,cAAc,KAAKK,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;QAC1EiB,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACC,MAAM,CAAE;QAAAS,QAAA,EAExCT;MAAM,GAJFA,MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKL,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MAAQmB,SAAS,EAAC,WAAW;MAACS,OAAO,EAAEhB,YAAa;MAAAQ,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACnB,EAAA,CAnDIJ,MAAsG;AAAA4B,EAAA,GAAtG5B,MAAsG;AAqD5G,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}