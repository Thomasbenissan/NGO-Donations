{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbenissan/Desktop/Donation Form/src/Form/slides/Slide5.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport '../Form.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51PUvGYDnU0bnacSN8IVpRzur6MRgdxgSumM0E2SmFBGcCY1XieKrADjLJlKImzdIiLmFuaNimjMZPlEsWWlLudAH00v0A0af9I');\nconst CheckoutForm = ({\n  amount\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!stripe || !elements) {\n      setError('Stripe has not loaded yet.');\n      setLoading(false);\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    if (cardElement) {\n      const response = await fetch('http://localhost:4242/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount\n        })\n      });\n      const session = await response.json();\n      if (session.error) {\n        setError(session.error);\n        setLoading(false);\n        return;\n      }\n      if (session.id) {\n        const result = await stripe.redirectToCheckout({\n          sessionId: session.id\n        });\n        if (result.error) {\n          setError(result.error.message || 'FOR FUCKS SAKE');\n          setLoading(false);\n        }\n      } else {\n        setError('Failed to create Stripe session.');\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"stripe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statement\",\n      children: \"You can easily complete your donation in the form below. All you need is a credit card.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [\"Your credit card will be charged $\", amount, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n      className: \"card-element\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"ok-button\",\n      disabled: loading || !stripe,\n      children: loading ? 'Processing...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"UBK5pRmeIOwCJb7VBFJPKfTjZr8=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst Slide5 = ({\n  nextSlide,\n  amount\n}) => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n      amount: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Slide5;\nexport default Slide5;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"Slide5\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","amount","_s","stripe","elements","error","setError","loading","setLoading","handleSubmit","event","preventDefault","cardElement","getElement","response","fetch","method","headers","body","JSON","stringify","session","json","id","result","redirectToCheckout","sessionId","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","Slide5","nextSlide","_c2","$RefreshReg$"],"sources":["/Users/thomasbenissan/Desktop/Donation Form/src/Form/slides/Slide5.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport '../Form.css'; // Import the CSS file\n\nconst stripePromise = loadStripe('pk_test_51PUvGYDnU0bnacSN8IVpRzur6MRgdxgSumM0E2SmFBGcCY1XieKrADjLJlKImzdIiLmFuaNimjMZPlEsWWlLudAH00v0A0af9I');\n\nconst CheckoutForm: React.FC<{ amount: number }> = ({ amount }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    setLoading(true);\n\n    if (!stripe || !elements) {\n      setError('Stripe has not loaded yet.');\n      setLoading(false);\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n\n    if (cardElement) {\n      const response = await fetch('http://localhost:4242/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ amount }),\n      });\n\n      const session = await response.json();\n\n      if (session.error) {\n        setError(session.error);\n        setLoading(false);\n        return;\n      }\n\n      if (session.id) {\n        const result = await stripe.redirectToCheckout({\n          sessionId: session.id,\n        });\n\n        if (result.error) {\n          setError(result.error.message || 'FOR FUCKS SAKE');\n          setLoading(false);\n        }\n      } else {\n        setError('Failed to create Stripe session.');\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"stripe-form\">\n      <div className=\"statement\">\n        You can easily complete your donation in the form below. All you need is a credit card.\n      </div>\n      <div className=\"question\">\n        Your credit card will be charged ${amount}.\n      </div>\n      <CardElement className=\"card-element\" />\n      {error && <div className=\"error\">{error}</div>}\n      <button type=\"submit\" className=\"ok-button\" disabled={loading || !stripe}>\n        {loading ? 'Processing...' : 'Submit'}\n      </button>\n    </form>\n  );\n};\n\nconst Slide5: React.FC<{ nextSlide: () => void, amount: number }> = ({ nextSlide, amount }) => {\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm amount={amount} />\n    </Elements>\n  );\n};\n\nexport default Slide5;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}